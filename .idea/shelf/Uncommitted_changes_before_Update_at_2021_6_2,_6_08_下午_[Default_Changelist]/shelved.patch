Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n * 模块级别的构建文件：用于未所在模块定义构建配置，可以实现自定义的打包选项或者替换main/应用清单 或者 顶层构建配置\n */\n\n/**\n * Android Studio中的模块（Module）有两种属性：application（可独立运行的Android程序，即我们的App）  和  library（不可独立运行，是Android程序的依赖文件）\n */\napply plugin: 'com.android.application'\napply plugin: 'kotlin-android'\napply plugin: 'kotlin-android-extensions'\n\n/**\n * 定义用于Android的build配置设置\n */\nandroid {\n    compileSdkVersion 28  // 定义Gradle编译该模块时使用的Android API 版本，即在该模块中可以使用改版本及以下的Android特型\n\n    /**\n     * 默认设置：包括所有的默认设置和进入构建变种的入口\n     */\n    defaultConfig {\n        applicationId \"cc.aiknow.basicandroid\"  // 独一无二的应用包名，项目中的源码可以引用清单文件中定义的包名\n        minSdkVersion rootProject.ext.minSdkVersion // 定义最小的Android API版本\n        targetSdkVersion rootProject.ext.targetSdkVersion // 定义用于测试App时的Android API版本\n        versionCode 1 // App的版本号\n        versionName \"1.0\" // 版本名称\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    /**\n     * 构建类型设置：可以自定义多种构建类型，比如debug 、 release等\n     * 默认是有两种配置类型：debug 和 release\n     * debug配置类型：默认默认不再配置(build)文件中显示，它包含在debug工具中，并且用debug key来进行签名\n     * release配置类型：默认使用Proguard进行设置，并且默认没有签名\n     */\n    buildTypes {\n        release {\n            minifyEnabled false  // 是否使用proguard来进行缩小代码体积\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'  // Proguard rules file\n        }\n    }\n\n\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n\n\n    kotlinOptions {\n        jvmTarget = '1.8'\n    }\n\n\n    /**\n     * 切开配置：可以根据设置在打包时进行拆包，从而打出只包含部分文件的包\n     *\n     */\n    splits {\n\n        // 根据屏幕密度的不同打成不同的包，每个包中只包含自己屏幕密度文件的包和自己屏幕密度下所需的其他文件 Settings to build multiple APKs based on screen density.\n        density {\n\n            // Enable or disable building multiple APKs.\n            enable false\n\n            // Exclude these densities when building multiple APKs.\n            exclude \"ldpi\", \"tvdpi\", \"xxxhdpi\", \"400dpi\", \"560dpi\"\n        }\n    }\n}\n\n/**\n * 定义了该模块所需的依赖文件\n */\ndependencies {\n    implementation 'com.google.android.material:material:1.0.0'\n    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'\n    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'\n    def lifecycle_version = \"2.0.0\"\n    // ViewModel and LiveData\n    implementation \"androidx.lifecycle:lifecycle-extensions:$lifecycle_version\"\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\n    implementation 'androidx.appcompat:appcompat:1.0.2'\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\n    testImplementation 'junit:junit:4.12'\n    androidTestImplementation 'androidx.test:runner:1.2.0'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\n     implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:${rootProject.ext.kotlinVersion}\"\n    implementation 'com.facebook.stetho:stetho:1.5.1'\n    implementation 'com.github.bumptech.glide:glide:4.9.0'\n    implementation 'androidx.recyclerview:recyclerview:1.0.0'\n    implementation 'com.google.code.gson:gson:2.8.5'\n    implementation 'com.squareup.retrofit2:retrofit:2.6.0'\n    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 6a365096e1a94a699d455142683b125b336f9746)
+++ app/build.gradle	(date 1621236343000)
@@ -77,6 +77,9 @@
     implementation 'com.google.android.material:material:1.0.0'
     implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
     implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'
+    implementation project(path: ':apt-annotation')
+    implementation project(path: ':apt-library')
+    annotationProcessor project(path: ':apt-processor')
     def lifecycle_version = "2.0.0"
     // ViewModel and LiveData
     implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
Index: apt-processor/src/main/java/com/example/apt_processor/AptProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-processor/src/main/java/com/example/apt_processor/AptProcessor.java	(date 1621220210000)
+++ apt-processor/src/main/java/com/example/apt_processor/AptProcessor.java	(date 1621220210000)
@@ -0,0 +1,4 @@
+package com.example.apt_processor;
+
+public class AptProcessor {
+}
\ No newline at end of file
Index: apt-processor/src/main/java/com/example/apt_processor/BindViewProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-processor/src/main/java/com/example/apt_processor/BindViewProcessor.java	(date 1621417631000)
+++ apt-processor/src/main/java/com/example/apt_processor/BindViewProcessor.java	(date 1621417631000)
@@ -0,0 +1,154 @@
+package com.example.apt_processor;
+
+import com.example.apt_annotation.BindView;
+import com.google.auto.service.AutoService;
+import com.squareup.javapoet.JavaFile;
+
+import java.io.IOException;
+import java.io.Writer;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.LinkedHashSet;
+import java.util.Map;
+import java.util.Set;
+
+import javax.annotation.processing.AbstractProcessor;
+import javax.annotation.processing.Messager;
+import javax.annotation.processing.ProcessingEnvironment;
+import javax.annotation.processing.Processor;
+import javax.annotation.processing.RoundEnvironment;
+import javax.lang.model.SourceVersion;
+import javax.lang.model.element.Element;
+import javax.lang.model.element.TypeElement;
+import javax.lang.model.element.VariableElement;
+import javax.lang.model.util.Elements;
+import javax.tools.Diagnostic;
+import javax.tools.JavaFileObject;
+
+/**
+ * @Description: 注解处理类，用于根据注解生成相应的Java文件
+ * 注：
+ *
+ * @Author chenhaoqiang
+ * @Since 2021/5/17
+ * @Version 1.0
+ */
+@AutoService(Processor.class)
+public class BindViewProcessor extends AbstractProcessor {
+
+    /**
+     * 可以用来打印错误信息
+     */
+    private Messager mMessager;
+
+    /**
+     * 是一个可以处理Element的工具类
+     * Element(程序元素）：是指Java文件中的元素，比如包、类、方法、变量都可以称作是一个程序元素
+     *        1. ExecutableElement：表示类或者接口中的方法、构造函数、初始化器({} 或者static{}) ，包括注解类型的元素
+     *        2. PackageElement： 表示包元素，内部提供访问包和内部成员的入口
+     *        3. TypeElement： 表示类或者接口元素，内部提供了类型信息和访问成员的入口，注意枚举是类，注解是接口
+     *        4. VariableElement： 表示一个字段(Field)、枚举实例、方法或者构造函数中的参数、本地变量、资源变量、或者异常参数
+     *        5. TypeParameterElement： 表示泛型类、接口、方法、构造函数中的类型参数
+     */
+    private Elements mElementUtils;
+
+    /**
+     * 采用Map存储每个类及其对应的Java代码生成代理类
+     * key：类限定类名
+     * value：ClassCreatorProxy
+     */
+    private Map<String, ClassCreatorProxy> mProxyMap = new HashMap<>();
+
+
+    /**
+     * 初始化：可以得到ProcessingEnvironment，ProcessingEnvironment提供很多有用的工具类Elements, Types 和 Filer
+     * 例如：
+     *     processingEnvironment.getElementUtils()  可以获得Elements 对象，封装了一系列实用的操作Element的方法
+     *     processingEnvironment.getMessager()  获得Messager 来打印错误、警告、和其他信息  在编译的时候build窗口输出
+     *
+     * @param processingEnvironment
+     */
+    @Override
+    public synchronized void init(ProcessingEnvironment processingEnvironment) {
+        super.init(processingEnvironment);
+        mMessager = processingEnvironment.getMessager();
+        mElementUtils = processingEnvironment.getElementUtils();
+    }
+
+    /**
+     * 指定该注解处理器是注册给哪个注解使用的
+     * 也可以使用@SupportedAnnotationTypes注解标记当前处理器可以处理哪些注解
+     * @return
+     */
+    @Override
+    public Set<String> getSupportedAnnotationTypes() {
+        HashSet<String> supportTypes = new LinkedHashSet<>();
+        supportTypes.add(BindView.class.getCanonicalName());
+        return supportTypes;
+    }
+
+    /**
+     * 指定使用的Java版本，通常这里返回SourceVersion.latestSupported()
+     * 也可以使用@SupportedSourceVersion注解标记当前处理器支持的版本
+     * @return
+     */
+    @Override
+    public SourceVersion getSupportedSourceVersion() {
+        return SourceVersion.latestSupported();
+    }
+
+    /**
+     * 可以在这里写扫描、评估和处理注解的代码，生成Java文件
+     *
+     * @param set
+     * @param roundEnvironment  是一个接口，表示一个注解处理工具框架，可以为注解处理器提供一个实现了此接口的对象，以便APT可以查询有关注解的信息
+     * @return
+     */
+    @Override
+    public boolean process(Set<? extends TypeElement> set, RoundEnvironment roundEnvironment) {
+        mMessager.printMessage(Diagnostic.Kind.NOTE, "APT---开始---APT");
+        mProxyMap.clear();
+        // 获取BindView注解绑定的所有程序元素
+        Set<? extends Element> elements = roundEnvironment.getElementsAnnotatedWith(BindView.class);
+        for (Element element: elements) {
+            VariableElement variableElement = (VariableElement) element; // 变量程序元素,获取注解修饰的变量元素
+            TypeElement classElement = (TypeElement) variableElement.getEnclosingElement(); // 获取变量元素的父元素，即所在类
+            String fullClassName = classElement.getQualifiedName().toString(); // 获取类型
+            mMessager.printMessage(Diagnostic.Kind.NOTE, "getQualifiedName：  " + fullClassName);
+            ClassCreatorProxy proxy = mProxyMap.get(fullClassName); // 获取这个类的代理类
+            if (proxy == null) {
+                proxy = new ClassCreatorProxy(mElementUtils, classElement);
+                mProxyMap.put(fullClassName, proxy);
+            }
+            // 获取当前元素上的注解并存入代理类中
+            BindView bindViewAnnotation = variableElement.getAnnotation(BindView.class);
+            int id = bindViewAnnotation.value();
+            proxy.putElement(id, variableElement);
+        }
+
+        // 循环创建Java文件
+        for ( String key: mProxyMap.keySet()) {
+            ClassCreatorProxy proxy = mProxyMap.get(key);
+            mMessager.printMessage(Diagnostic.Kind.NOTE, "创建Java文件： " + proxy.getProxyClassFullName());
+//            try {
+//                JavaFileObject javaFileObject = processingEnv.getFiler().createSourceFile(proxy.getProxyClassFullName(), proxy.getTypeElement());  // Filer用于创建新的资源、类或者其他文件
+//                Writer writer = javaFileObject.openWriter();
+//                writer.write(proxy.generateJavaCode());
+//                writer.flush();
+//                writer.close();
+//            } catch (IOException e) {
+//                mMessager.printMessage(Diagnostic.Kind.NOTE, "创建Java文件： " + proxy.getProxyClassFullName() + "  失败");
+//                e.printStackTrace();
+//            }
+
+            try {
+                JavaFile javaFile = JavaFile.builder(proxy.getPackageName(), proxy.generateJavaCLassByJavaPoet()).build();
+                javaFile.writeTo(processingEnv.getFiler());
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+        mMessager.printMessage(Diagnostic.Kind.NOTE, "APT---结束---APT");
+        return true;
+    }
+}
Index: apt-processor/src/main/java/com/example/apt_processor/ClassCreatorProxy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-processor/src/main/java/com/example/apt_processor/ClassCreatorProxy.java	(date 1621418150000)
+++ apt-processor/src/main/java/com/example/apt_processor/ClassCreatorProxy.java	(date 1621418150000)
@@ -0,0 +1,128 @@
+package com.example.apt_processor;
+
+import com.squareup.javapoet.ClassName;
+import com.squareup.javapoet.CodeBlock;
+import com.squareup.javapoet.MethodSpec;
+import com.squareup.javapoet.TypeSpec;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import javax.lang.model.element.Modifier;
+import javax.lang.model.element.PackageElement;
+import javax.lang.model.element.TypeElement;
+import javax.lang.model.element.VariableElement;
+import javax.lang.model.util.Elements;
+
+/**
+ * @Description: 创建Java代码的代理类，存放具体的创建Java代码的实现逻辑
+ * @Author chenhaoqiang
+ * @Since 2021/5/17
+ * @Version 1.0
+ */
+public class ClassCreatorProxy {
+
+    private String mBindingClassName; // 生成的Java文件类名
+    private String mPackageName; // 原类的包名
+    private TypeElement mTypeElement; // 类元素
+    private Map<Integer, VariableElement> mVariableElementMap = new HashMap<>();
+
+
+    public ClassCreatorProxy(Elements elementUtils, TypeElement classElement) {
+        this.mTypeElement = classElement;
+        PackageElement packageElement = elementUtils.getPackageOf(mTypeElement);
+        String packageName = packageElement.getQualifiedName().toString();
+        String className = mTypeElement.getSimpleName().toString();
+        this.mPackageName = packageName;
+        this.mBindingClassName = className + "_ViewBinding";
+    }
+
+    /**
+     * id 和 变量元素的映射
+     *
+     * @param id
+     * @param variableElement
+     */
+    public void putElement(int id, VariableElement variableElement) {
+        mVariableElementMap.put(id, variableElement);
+    }
+
+    /**
+     * 采用字符串创建Java类
+     * @return
+     */
+    public String generateJavaCode() {
+        StringBuilder builder = new StringBuilder();
+        builder.append("package ").append(mPackageName).append(";\n\n");
+        builder.append("import com.example.apt_library.*;\n");
+        builder.append('\n');
+        builder.append("public class ").append(mBindingClassName);
+        builder.append(" {\n");
+        generateMethods(builder);
+        builder.append('\n');
+        builder.append("}\n");
+        return builder.toString();
+    }
+
+    private void generateMethods(StringBuilder builder) {
+        builder.append("public void bind(").append(mTypeElement.getQualifiedName()).append(" host ) {\n");
+        for (int id : mVariableElementMap.keySet()) {
+            VariableElement element = mVariableElementMap.get(id);
+            String name = element.getSimpleName().toString();
+            String type = element.asType().toString();
+            builder.append("host.").append(name).append(" = ");
+            builder.append("(").append(type).append(")(((android.app.Activity)host).findViewById( ").append(id).append("));\n");
+        }
+        builder.append("  }\n");
+    }
+
+    /**
+     * 使用JavaPoet创建Java类
+     *
+     * @return 返回拼接好的Java类TypeSpec
+     */
+    public TypeSpec generateJavaCLassByJavaPoet() {
+        TypeSpec generatedClass = TypeSpec.classBuilder(mBindingClassName)
+                .addModifiers(Modifier.PUBLIC, Modifier.FINAL)
+                .addMethod(generateJavaMethodCodeByJavaPoet())
+                .build();
+
+        return generatedClass;
+    }
+
+
+    private MethodSpec generateJavaMethodCodeByJavaPoet() {
+        ClassName hostClassName = ClassName.bestGuess(mTypeElement.getQualifiedName().toString());
+        MethodSpec methodSpec = MethodSpec.methodBuilder("bind")
+                .addModifiers(Modifier.PUBLIC)
+                .returns(void.class)
+                .addParameter(hostClassName, "host")
+                .addCode(generateCodeBlock())
+                .build();
+        return methodSpec;
+    }
+
+    private CodeBlock generateCodeBlock() {
+        CodeBlock.Builder codeBlockBuilder = CodeBlock.builder();
+        for (int id : mVariableElementMap.keySet()) {
+            VariableElement variableElement = mVariableElementMap.get(id);
+            String varName = variableElement.getSimpleName().toString();
+            String valType = variableElement.asType().toString();
+            codeBlockBuilder.add("host." + varName + " = " + "(" + valType + ")" + "((android.app.Activity)host).findViewById($L);", id);
+        }
+        return codeBlockBuilder.build();
+    }
+
+
+    public String getProxyClassFullName() {
+        return mPackageName + "." + mBindingClassName;
+    }
+
+    public TypeElement getTypeElement() {
+        return mTypeElement;
+    }
+
+    public String getPackageName() {
+        return mPackageName;
+    }
+}
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\n/**\n * 构建工具就是对你的项目进行编译、运行、签名、打包、依赖管理等一系列功能的合集，传统的构建工具有 Make、Ant、Maven、Ivy等，而 Gradle是新一代的自动化构建工具\n */\n// 顶层的建文件：用于定义用于项目中所有模块的构建配置\n\n// buildscript代码块用于定义项目中所有模块共用的Gradle代码库和依赖项\n// buildscript: 用于定义Gradle自己在构建过程中所需的依赖\nbuildscript {\n\n    // 配置项目的全局属性(额外属性)：这些属性可以在项目中所有模块中引用(引用语法：rootProject.ext.property_name)\n    ext {\n        kotlinVersion = '1.3.10'\n        minSdkVersion = 21\n        targetSdkVersion = 28\n    }\n\n\n    // 定义Gradle用来搜索和下载依赖的仓库\n    repositories {\n        google()\n        jcenter()\n    }\n\n    // 依赖代码块：用于表示Gradle用来构建项目时需要的依赖项\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.4.2'  // Gradle插件版本，是Google定义的，即 Android gradle plugin 的版本\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.kotlinVersion}\"\n    }\n}\n\n// 配置所有模块需要的依赖和仓库，默认只有JCenter and Google's Maven仓库\n// 建议是每个模块的依赖都要在自己模块内的构建脚本中天级\nallprojects {\n    repositories {\n        google()\n        jcenter()\n    }\n}\n\n\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 6a365096e1a94a699d455142683b125b336f9746)
+++ build.gradle	(date 1621236225000)
@@ -28,6 +28,7 @@
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.kotlinVersion}"
+        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
     }
 }
 
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>include ':app'\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(revision 6a365096e1a94a699d455142683b125b336f9746)
+++ settings.gradle	(date 1621221256000)
@@ -1,1 +1,4 @@
+include ':apt-library'
+include ':apt-processor'
+include ':apt-annotation'
 include ':app'
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"cc.aiknow.basicandroid\">\n    <!-- INTERNET是普通权限 -->\n    <uses-permission android:name=\"android.permission.INTERNET\" /> <!-- 以下是危险权限需要动态申请 -->\n    <uses-permission android:name=\"android.permission.SEND_SMS\" />\n\n    <application\n        android:name=\".MyApplication\"\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\">\n        <activity android:name=\".webview.WebViewActivity\"></activity>\n        <activity\n            android:name=\".multipleprocess.MultipleProcessActivity\"\n            android:process=\":remote\" />\n        <activity android:name=\".textview.TextViewActivity\" />\n        <activity android:name=\".androidhorizontalscrollview.HorizontalScrollViewActivity\" />\n        <activity android:name=\".androidvieweventandanima.PropertyAnimActivity\" />\n        <activity android:name=\".androidvieweventandanima.FrameAnimaActivity\" />\n        <activity android:name=\".androidvieweventandanima.TranslateAnimActivity\" />\n        <activity android:name=\".androidvieweventandanima.ScrollActivity\" />\n        <activity android:name=\".androidvieweventandanima.ViewEventActivity\" />\n        <activity android:name=\".androidlayout.CoordinatorLayoutActivity\" />\n        <activity android:name=\".androidlayout.LayoutActivity\" />\n        <activity android:name=\".androidimage.ImageActivity\" />\n        <activity android:name=\".androidlistview.ListViewActivity\" />\n        <activity android:name=\".androidstore.StoreActivity\" />\n        <activity android:name=\".androidarch.ArchActivity\" />\n        <activity android:name=\".androidretrofit.RetrofitActivity\" />\n        <activity android:name=\".androidrecyclerview.RecyclerActivity\" />\n        <activity android:name=\".androidfragment.MyFragmentActivity\" />\n        <activity android:name=\".androidview.LearnViewActivity\" />\n\n        <receiver\n            android:name=\".androidbroadcast.MyBroadcastReceiver\"\n            android:enabled=\"true\"\n            android:exported=\"true\" />\n\n        <activity android:name=\".androidbroadcast.BroadcastActivity\" />\n\n        <receiver\n            android:name=\".androidbroadcast.MySystemBroadcastReceiver\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.AIRPLANE_MODE\" />\n            </intent-filter>\n        </receiver>\n\n        <service\n            android:name=\".androidservice.MyIntentService\"\n            android:exported=\"false\" />\n        <service\n            android:name=\".androidservice.MyService\"\n            android:exported=\"false\" />\n        <service android:name=\".androidservice.MyForegroundService\" />\n        <service\n            android:name=\".androidservice.MyBindService\"\n            android:enabled=\"true\"\n            android:exported=\"false\" />\n        <service\n            android:name=\".androidservice.MyMessengerBindService\"\n            android:enabled=\"true\"\n            android:exported=\"false\" />\n        <service\n            android:name=\".androidsaveprocess.JobSchedulerService\"\n            android:permission=\"android.permission.BIND_JOB_SERVICE\" />\n\n        <activity android:name=\".androidproceethread.ProcessAndThreadActivity\" />\n        <activity android:name=\".androidservice.ServiceActivity\" />\n        <activity\n            android:name=\".MainActivity\"\n            android:excludeFromRecents=\"false\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <action android:name=\"android.intent.action.VIEW\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\".androidactivity.AActivity\"\n            android:launchMode=\"singleTop\" />\n        <activity android:name=\".androidactivity.AndroidActivity\" />\n        <activity android:name=\".androidactivity.BActivity\">\n            <intent-filter>\n                <action android:name=\"activityB_action\" />\n\n                <category android:name=\"acticityB_categories\" />\n                <category android:name=\"android.intent.category.DEFAULT\" />\n            </intent-filter>\n        </activity>\n        <activity android:name=\".androidactivity.CActivity\" />\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 6a365096e1a94a699d455142683b125b336f9746)
+++ app/src/main/AndroidManifest.xml	(date 1621219682000)
@@ -13,7 +13,8 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
-        <activity android:name=".webview.WebViewActivity"></activity>
+        <activity android:name=".androidapt.AptActivity"></activity>
+        <activity android:name=".webview.WebViewActivity" />
         <activity
             android:name=".multipleprocess.MultipleProcessActivity"
             android:process=":remote" />
Index: app/src/main/java/cc/aiknow/basicandroid/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cc.aiknow.basicandroid;\n\nimport android.app.job.JobInfo;\nimport android.app.job.JobScheduler;\nimport android.content.ComponentName;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.recyclerview.widget.DividerItemDecoration;\nimport androidx.recyclerview.widget.ItemTouchHelper;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport cc.aiknow.basicandroid.androidJson.GsonTest;\nimport cc.aiknow.basicandroid.androidJson.JsonTest;\nimport cc.aiknow.basicandroid.androidactivity.AndroidActivity;\nimport cc.aiknow.basicandroid.androidarch.ArchActivity;\nimport cc.aiknow.basicandroid.androidbroadcast.BroadcastActivity;\nimport cc.aiknow.basicandroid.androidfragment.MyFragmentActivity;\nimport cc.aiknow.basicandroid.androidimage.ImageActivity;\nimport cc.aiknow.basicandroid.androidlayout.LayoutActivity;\nimport cc.aiknow.basicandroid.androidlistview.ListViewActivity;\nimport cc.aiknow.basicandroid.androidproceethread.ProcessAndThreadActivity;\nimport cc.aiknow.basicandroid.androidrecyclerview.MainRecyclerViewAdapter;\nimport cc.aiknow.basicandroid.androidrecyclerview.MainRecyclerViewItemTouchHelper;\nimport cc.aiknow.basicandroid.androidrecyclerview.RecyclerActivity;\nimport cc.aiknow.basicandroid.androidrecyclerview.RecyclerViewItemClickListener;\nimport cc.aiknow.basicandroid.androidretrofit.RetrofitActivity;\nimport cc.aiknow.basicandroid.androidsaveprocess.JobSchedulerService;\nimport cc.aiknow.basicandroid.androidservice.ServiceActivity;\nimport cc.aiknow.basicandroid.androidstore.StoreActivity;\nimport cc.aiknow.basicandroid.androidview.LearnViewActivity;\nimport cc.aiknow.basicandroid.androidvieweventandanima.ViewEventActivity;\nimport cc.aiknow.basicandroid.multipleprocess.MultipleProcessActivity;\nimport cc.aiknow.basicandroid.textview.TextViewActivity;\nimport cc.aiknow.basicandroid.util.Utils;\nimport cc.aiknow.basicandroid.webview.WebViewActivity;\n\n/**\n * @Description: 主界面 \n * @Author: chen\n * @Date: 2019/6/2\n */\npublic class MainActivity extends AppCompatActivity implements RecyclerViewItemClickListener {\n\n    private Map<String, Class<?>> itemDataBase;\n    private List<String> itemNames;\n    private RecyclerView recyclerView;\n    private MainRecyclerViewAdapter adapter;\n\n    private JobScheduler jobScheduler;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        Log.e(\"chenhaoqiang\", Utils.getProcessName(this, android.os.Process.myPid()));\n        setContentView(R.layout.activity_main);\n        initDataBase();\n        findView();\n        RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(this);\n        recyclerView.setLayoutManager(layoutManager);\n        adapter = new MainRecyclerViewAdapter();\n        adapter.setData(itemDataBase, itemNames, this);\n        recyclerView.setAdapter(adapter);\n        DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(this, DividerItemDecoration.VERTICAL);\n        dividerItemDecoration.setDrawable(getResources().getDrawable(R.drawable.main_recyclerview_divider));\n        recyclerView.addItemDecoration(dividerItemDecoration);\n\n        ItemTouchHelper itemTouchHelper = new ItemTouchHelper(new MainRecyclerViewItemTouchHelper(adapter, itemNames));\n        itemTouchHelper.attachToRecyclerView(recyclerView);\n\n        JsonTest.creatJSON();\n        JsonTest.jsonTokener();\n        JsonTest.jsonStringer();\n\n        GsonTest.serialization();\n        GsonTest.deserialization();\n\n        // File实现了序列化接口可被intent传递\n//        File file = new File(\"\");\n//        Bundle bundle = new Bundle();\n//        bundle.putSerializable(\"s\", file);\n\n        initJobScheduler();\n    }\n\n    private void initDataBase() {\n        itemNames = new ArrayList<String>(){{\n            add(\"Activity\");\n            add(\"Service\");\n            add(\"ProcessAndThread\");\n            add(\"Broadcast\");\n            add(\"learnView\");\n            add(\"Fragment\");\n            add(\"RecyclerView\");\n            add(\"Retrofit\");\n            add(\"AndroidArch\");\n            add(\"AndroidStore\");\n            add(\"ListView\");\n            add(\"Image\");\n            add(\"Layout\");\n            add(\"viewEvent\");\n            add(\"textView\");\n            add(\"multipleProcess\");\n            add(\"WebView\");\n\n        }};\n        itemDataBase = new HashMap<String, Class<?>>(){{\n            put(\"Activity\", AndroidActivity.class);\n            put(\"Service\", ServiceActivity.class);\n            put(\"ProcessAndThread\", ProcessAndThreadActivity.class);\n            put(\"Broadcast\", BroadcastActivity.class);\n            put(\"learnView\", LearnViewActivity.class);\n            put(\"Fragment\", MyFragmentActivity.class);\n            put(\"RecyclerView\", RecyclerActivity.class);\n            put(\"Retrofit\", RetrofitActivity.class);\n            put(\"AndroidArch\", ArchActivity.class);\n            put(\"AndroidStore\", StoreActivity.class);\n            put(\"ListView\", ListViewActivity.class);\n            put(\"Image\", ImageActivity.class);\n            put(\"Layout\", LayoutActivity.class);\n            put(\"viewEvent\", ViewEventActivity.class);\n            put(\"textView\", TextViewActivity.class);\n            put(\"multipleProcess\", MultipleProcessActivity.class);\n            put(\"WebView\", WebViewActivity.class);\n        }};\n    }\n\n    private void findView() {\n        recyclerView = findViewById(R.id.mainRecyclerView);\n    }\n\n    @Override\n    public void onItemClicked(int position) {\n        Log.i(\"Mypostion\", String.valueOf(position));\n        Intent i = new Intent(this, itemDataBase.get(itemNames.get(position)));\n        startActivity(i);\n    }\n\n    private void initJobScheduler() {\n        // JobInfo用于设置任务调度的条件\n        int jobId = 1;\n        JobInfo.Builder builder = new JobInfo.Builder(jobId, new ComponentName(getPackageName(), JobSchedulerService.class.getName()));\n        builder.setPeriodic(1000);\n        // job调度程序\n        jobScheduler = (JobScheduler) getSystemService(Context.JOB_SCHEDULER_SERVICE);\n        // 调度成功时返回被调度的job ID，失败则返回一个负数\n        if (jobScheduler.schedule(builder.build()) >= 0) {\n            Log.e(\"Job\", \"JonScheduler  success\");\n        } else {\n            Log.e(\"Job\", \"JonScheduler  failure\");\n        }\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        jobScheduler.cancel(1);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/cc/aiknow/basicandroid/MainActivity.java	(revision 6a365096e1a94a699d455142683b125b336f9746)
+++ app/src/main/java/cc/aiknow/basicandroid/MainActivity.java	(date 1621219816000)
@@ -22,6 +22,7 @@
 import cc.aiknow.basicandroid.androidJson.GsonTest;
 import cc.aiknow.basicandroid.androidJson.JsonTest;
 import cc.aiknow.basicandroid.androidactivity.AndroidActivity;
+import cc.aiknow.basicandroid.androidapt.AptActivity;
 import cc.aiknow.basicandroid.androidarch.ArchActivity;
 import cc.aiknow.basicandroid.androidbroadcast.BroadcastActivity;
 import cc.aiknow.basicandroid.androidfragment.MyFragmentActivity;
@@ -111,6 +112,7 @@
             add("textView");
             add("multipleProcess");
             add("WebView");
+            add("Apt");
 
         }};
         itemDataBase = new HashMap<String, Class<?>>(){{
@@ -131,6 +133,7 @@
             put("textView", TextViewActivity.class);
             put("multipleProcess", MultipleProcessActivity.class);
             put("WebView", WebViewActivity.class);
+            put("Apt", AptActivity.class);
         }};
     }
 
Index: app/src/main/java/cc/aiknow/basicandroid/androidapt/AptActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/cc/aiknow/basicandroid/androidapt/AptActivity.java	(date 1621239288000)
+++ app/src/main/java/cc/aiknow/basicandroid/androidapt/AptActivity.java	(date 1621239288000)
@@ -0,0 +1,27 @@
+package cc.aiknow.basicandroid.androidapt;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.os.Bundle;
+import android.widget.TextView;
+
+import com.example.apt_annotation.BindView;
+import com.example.apt_library.BindViewTools;
+
+import cc.aiknow.basicandroid.R;
+
+public class AptActivity extends AppCompatActivity {
+    @BindView(R.id.text_one)
+    TextView textOne;
+    @BindView(R.id.text_two)
+    TextView textTwo;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_apt);
+        BindViewTools.Bind(this);
+        textOne.setText("哈哈哈");
+        textTwo.setText("哈哈哈哈哈哈");
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_apt.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_apt.xml	(date 1621234028000)
+++ app/src/main/res/layout/activity_apt.xml	(date 1621234028000)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".androidapt.AptActivity">
+
+    <TextView
+        android:id="@+id/text_one"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toTopOf="parent"/>
+
+    <TextView
+        android:id="@+id/text_two"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/text_one"
+        android:layout_marginTop="100dp"/>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"CompilerConfiguration\">\n    <bytecodeTargetLevel target=\"1.8\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision 6a365096e1a94a699d455142683b125b336f9746)
+++ .idea/compiler.xml	(date 1621239075000)
@@ -1,6 +1,20 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="1.8" />
+    <annotationProcessing>
+      <profile name="Gradle Imported" enabled="true">
+        <outputRelativeToContentRoot value="true" />
+        <processorPath useClasspath="false">
+          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.auto.service/auto-service/1.0-rc2/51033a5b8fcf7039159e35b6878f106ccd5fb35f/auto-service-1.0-rc2.jar" />
+          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.auto/auto-common/0.3/4073ab16ab4aceb9a217273da6442166bf51ae16/auto-common-0.3.jar" />
+          <entry name="$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.guava/guava/18.0/cce0823396aa693798f8882e64213b1772032b09/guava-18.0.jar" />
+        </processorPath>
+        <module name="BasicAndroid.apt-processor" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel target="1.7">
+      <module name="BasicAndroid.app" target="1.8" />
+      <module name="BasicAndroid.apt-library" target="1.8" />
+    </bytecodeTargetLevel>
   </component>
 </project>
\ No newline at end of file
Index: apt-annotation/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-annotation/.gitignore	(date 1621220152000)
+++ apt-annotation/.gitignore	(date 1621220152000)
@@ -0,0 +1,1 @@
+/build
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"RunConfigurationProducerService\">\n    <option name=\"ignoredProducers\">\n      <set>\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer\" />\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer\" />\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer\" />\n      </set>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision 6a365096e1a94a699d455142683b125b336f9746)
+++ .idea/runConfigurations.xml	(date 1622627451918)
@@ -3,6 +3,7 @@
   <component name="RunConfigurationProducerService">
     <option name="ignoredProducers">
       <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
Index: apt-annotation/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-annotation/build.gradle	(date 1621221189000)
+++ apt-annotation/build.gradle	(date 1621221189000)
@@ -0,0 +1,8 @@
+plugins {
+    id 'java-library'
+}
+
+java {
+    sourceCompatibility = JavaVersion.VERSION_1_7
+    targetCompatibility = JavaVersion.VERSION_1_7
+}
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"PLATFORM\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n          </set>\n        </option>\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\n        <option name=\"useQualifiedModuleNames\" value=\"true\" />\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 6a365096e1a94a699d455142683b125b336f9746)
+++ .idea/gradle.xml	(date 1621221277000)
@@ -11,6 +11,9 @@
           <set>
             <option value="$PROJECT_DIR$" />
             <option value="$PROJECT_DIR$/app" />
+            <option value="$PROJECT_DIR$/apt-annotation" />
+            <option value="$PROJECT_DIR$/apt-library" />
+            <option value="$PROJECT_DIR$/apt-processor" />
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
Index: apt-annotation/src/main/java/com/example/apt_annotation/AptAnnotation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-annotation/src/main/java/com/example/apt_annotation/AptAnnotation.java	(date 1621396599000)
+++ apt-annotation/src/main/java/com/example/apt_annotation/AptAnnotation.java	(date 1621396599000)
@@ -0,0 +1,41 @@
+package com.example.apt_annotation;
+
+import java.lang.reflect.Field;
+
+public class AptAnnotation {
+
+    @TestAnnotation(value = 100)
+    private int field0;
+
+    @TestAnnotation
+    private int filed1;
+
+    public static void main(String[] args) {
+        try {
+            Class clazz = Class.forName(AptAnnotation.class.getName());
+            Field[] fields = clazz.getDeclaredFields();
+            for (Field field : fields) {
+                TestAnnotation bindView = field.getAnnotation(TestAnnotation.class);
+                System.out.println(bindView.value());
+            }
+        } catch (ClassNotFoundException e) {
+            e.printStackTrace();
+        }
+
+        /**
+         * getName: 是返回实体类型名称
+         * getSimpleName: 返回实例在源码中声明的名称
+         * getCanonicalName:是获取java语言规范定义的规范名称
+         */
+        System.out.println("测试一下Class名称方法");
+        System.out.println(AptAnnotation.class.getName());  // om.example.apt_annotation.AptAnnotation
+        System.out.println(AptAnnotation.class.getSimpleName());  // AptAnnotation
+        System.out.println(AptAnnotation.class.getCanonicalName()); // com.example.apt_annotation.AptAnnotation
+
+        System.out.println(Inner.class.getName());  // com.example.apt_annotation.AptAnnotation$Inner
+        System.out.println(Inner.class.getSimpleName());  // Inner
+        System.out.println(Inner.class.getCanonicalName()); // com.example.apt_annotation.AptAnnotation.Inner
+    }
+
+    class Inner {}
+}
\ No newline at end of file
Index: apt-annotation/src/main/java/com/example/apt_annotation/BindView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-annotation/src/main/java/com/example/apt_annotation/BindView.java	(date 1621394236000)
+++ apt-annotation/src/main/java/com/example/apt_annotation/BindView.java	(date 1621394236000)
@@ -0,0 +1,30 @@
+package com.example.apt_annotation;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * @Description: 自定义的BindView注解类
+ * 注：
+ * 元注解：
+ *     1. 用于标记在注解上的注解，如使用在注解@Override上的@Target等注解
+ *     2. 元注解的种类：
+ *        @Retention: 注解的保留范围（RetentionPolicy中定义了常量）：SOURCE（源码可用）、CLASS（字节码/编译期可用）、RUNTIME（运行时可用）
+ *                    SOURCE：源码可用的注解，作用就是标记
+ *                    RUNTIME：运行时注解即可在运行时通过反射来实现注解处理器
+ *                    CLASS：编译期注解是在编译期间实现注解处理器
+ *        @Target：   注解的使用范围（ElementType定义了常量）： 默认可以修饰Java中的任何元素
+ *        @Inherited  是否可以被继承：默认是false
+ *        @Documented 是否会保存到JavaDoc文件中
+ *
+ * @Author chenhaoqiang
+ * @Since 2021/5/17
+ * @Version 1.0
+ */
+@Retention(RetentionPolicy.CLASS) // 编译时注解
+@Target(ElementType.FIELD)  // 针对类的成员变量
+public @interface BindView {
+    int value(); // 注解值的的定义语法：类型 参数名() default 默认值  注： 默认值是可选的
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"NullableNotNullManager\">\n    <option name=\"myDefaultNullable\" value=\"android.support.annotation.Nullable\" />\n    <option name=\"myDefaultNotNull\" value=\"android.support.annotation.NonNull\" />\n    <option name=\"myNullables\">\n      <value>\n        <list size=\"15\">\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.Nullable\" />\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nullable\" />\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"javax.annotation.CheckForNull\" />\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.Nullable\" />\n          <item index=\"4\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.Nullable\" />\n          <item index=\"5\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.Nullable\" />\n          <item index=\"6\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.RecentlyNullable\" />\n          <item index=\"7\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.qual.Nullable\" />\n          <item index=\"8\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NullableDecl\" />\n          <item index=\"9\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NullableType\" />\n          <item index=\"10\" class=\"java.lang.String\" itemvalue=\"android.annotation.Nullable\" />\n          <item index=\"11\" class=\"java.lang.String\" itemvalue=\"com.android.annotations.Nullable\" />\n          <item index=\"12\" class=\"java.lang.String\" itemvalue=\"org.eclipse.jdt.annotation.Nullable\" />\n          <item index=\"13\" class=\"java.lang.String\" itemvalue=\"io.reactivex.annotations.Nullable\" />\n          <item index=\"14\" class=\"java.lang.String\" itemvalue=\"io.reactivex.rxjava3.annotations.Nullable\" />\n        </list>\n      </value>\n    </option>\n    <option name=\"myNotNulls\">\n      <value>\n        <list size=\"14\">\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.NotNull\" />\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nonnull\" />\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.NonNull\" />\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.NonNull\" />\n          <item index=\"4\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.NonNull\" />\n          <item index=\"5\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.RecentlyNonNull\" />\n          <item index=\"6\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.qual.NonNull\" />\n          <item index=\"7\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NonNullDecl\" />\n          <item index=\"8\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NonNullType\" />\n          <item index=\"9\" class=\"java.lang.String\" itemvalue=\"android.annotation.NonNull\" />\n          <item index=\"10\" class=\"java.lang.String\" itemvalue=\"com.android.annotations.NonNull\" />\n          <item index=\"11\" class=\"java.lang.String\" itemvalue=\"org.eclipse.jdt.annotation.NonNull\" />\n          <item index=\"12\" class=\"java.lang.String\" itemvalue=\"io.reactivex.annotations.NonNull\" />\n          <item index=\"13\" class=\"java.lang.String\" itemvalue=\"io.reactivex.rxjava3.annotations.NonNull\" />\n        </list>\n      </value>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 6a365096e1a94a699d455142683b125b336f9746)
+++ .idea/misc.xml	(date 1621220161000)
@@ -45,7 +45,7 @@
       </value>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="false" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: apt-annotation/src/main/java/com/example/apt_annotation/TestAnnotation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-annotation/src/main/java/com/example/apt_annotation/TestAnnotation.java	(date 1621414293000)
+++ apt-annotation/src/main/java/com/example/apt_annotation/TestAnnotation.java	(date 1621414293000)
@@ -0,0 +1,17 @@
+package com.example.apt_annotation;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * @Description: 测试注解
+ * @Author chenhaoqiang
+ * @Since 2021/5/19
+ * @Version 1.0
+ */
+@Retention(RetentionPolicy.RUNTIME)
+public @interface TestAnnotation {
+    int value() default -1;
+}
Index: apt-library/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-library/.gitignore	(date 1621221256000)
+++ apt-library/.gitignore	(date 1621221256000)
@@ -0,0 +1,1 @@
+/build
\ No newline at end of file
Index: apt-library/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-library/build.gradle	(date 1621239156000)
+++ apt-library/build.gradle	(date 1621239156000)
@@ -0,0 +1,40 @@
+plugins {
+    id 'com.android.library'
+}
+
+android {
+    compileSdkVersion 30
+    buildToolsVersion "30.0.2"
+
+    defaultConfig {
+        minSdkVersion 21
+        targetSdkVersion 30
+        versionCode 1
+        versionName "1.0"
+
+        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
+        consumerProguardFiles "consumer-rules.pro"
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
+        }
+    }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
+}
+
+dependencies {
+
+    implementation 'androidx.appcompat:appcompat:1.2.0'
+    implementation 'com.google.android.material:material:1.3.0'
+    annotationProcessor project(path: ':apt-processor')
+    implementation project(path: ':apt-annotation')
+    testImplementation 'junit:junit:4.+'
+    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
+}
\ No newline at end of file
Index: apt-library/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-library/proguard-rules.pro	(date 1621221256000)
+++ apt-library/proguard-rules.pro	(date 1621221256000)
@@ -0,0 +1,21 @@
+# Add project specific ProGuard rules here.
+# You can control the set of applied configuration files using the
+# proguardFiles setting in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
\ No newline at end of file
Index: apt-library/src/androidTest/java/com/example/apt_library/ExampleInstrumentedTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-library/src/androidTest/java/com/example/apt_library/ExampleInstrumentedTest.java	(date 1621221257000)
+++ apt-library/src/androidTest/java/com/example/apt_library/ExampleInstrumentedTest.java	(date 1621221257000)
@@ -0,0 +1,26 @@
+package com.example.apt_library;
+
+import android.content.Context;
+
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumented test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();
+        assertEquals("com.example.apt_library.test", appContext.getPackageName());
+    }
+}
\ No newline at end of file
Index: apt-library/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-library/src/main/AndroidManifest.xml	(date 1621221257000)
+++ apt-library/src/main/AndroidManifest.xml	(date 1621221257000)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.example.apt_library">
+
+</manifest>
\ No newline at end of file
Index: apt-library/src/main/java/com/example/apt_library/BindViewTools.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-library/src/main/java/com/example/apt_library/BindViewTools.java	(date 1621233728000)
+++ apt-library/src/main/java/com/example/apt_library/BindViewTools.java	(date 1621233728000)
@@ -0,0 +1,27 @@
+package com.example.apt_library;
+
+import android.app.Activity;
+
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+
+/**
+ * @Description: TODO
+ * @Author chenhaoqiang
+ * @Since 2021/5/17
+ * @Version 1.0
+ */
+public class BindViewTools {
+
+    public static void Bind(Activity activity) {
+        Class clazz = activity.getClass();
+        Class bindViewClass = null;
+        try {
+            bindViewClass = Class.forName(clazz.getName() + "_ViewBinding");
+            Method method = bindViewClass.getMethod("bind", activity.getClass());
+            method.invoke(bindViewClass.newInstance(), activity);
+        } catch (ClassNotFoundException | NoSuchMethodException | IllegalAccessException | InstantiationException | InvocationTargetException e) {
+            e.printStackTrace();
+        }
+    }
+}
Index: apt-library/src/test/java/com/example/apt_library/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-library/src/test/java/com/example/apt_library/ExampleUnitTest.java	(date 1621221257000)
+++ apt-library/src/test/java/com/example/apt_library/ExampleUnitTest.java	(date 1621221257000)
@@ -0,0 +1,17 @@
+package com.example.apt_library;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: apt-processor/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-processor/.gitignore	(date 1621220210000)
+++ apt-processor/.gitignore	(date 1621220210000)
@@ -0,0 +1,1 @@
+/build
\ No newline at end of file
Index: apt-processor/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apt-processor/build.gradle	(date 1621415538000)
+++ apt-processor/build.gradle	(date 1621415538000)
@@ -0,0 +1,14 @@
+plugins {
+    id 'java-library'
+}
+
+java {
+    sourceCompatibility = JavaVersion.VERSION_1_7
+    targetCompatibility = JavaVersion.VERSION_1_7
+}
+dependencies {
+    implementation 'com.google.auto.service:auto-service:1.0-rc2'
+    annotationProcessor 'com.google.auto.service:auto-service:1.0-rc2'
+    implementation 'com.squareup:javapoet:1.10.0'
+    implementation project(path: ':apt-annotation')
+}
\ No newline at end of file
diff --git apt-library/consumer-rules.pro apt-library/consumer-rules.pro
new file mode 100644
